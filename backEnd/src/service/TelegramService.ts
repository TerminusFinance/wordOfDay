import { Connection } from 'mysql2/promise';
import myBot from "../bot/Bot";
interface UserRow {
    userId: number;
    codeToInvite: string;
}
class TelegramService {
    private bot = myBot;
    constructor(private db: Connection) {}

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    getInlineMarkup = (lnCode: string, inviteMessage: string, inviteCode?: string, ) => {
        const playButton = {
            text: lnCode === 'ru' ? '–ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å üí∞' : 'Play right now üí∞',
            web_app: { url: `https://husiev.com?inviteCode=${inviteCode || ''}` }
        };

        const subscribeButton = {
            text: lnCode === 'ru' ? '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üîû' : 'Subscribe to chanel üîû',
            url: 'https://t.me/TerminusFinance'
        };

        const howToPlayButton = {
            text: lnCode === 'ru' ? '–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞! ü´¶' : 'Send invite to friends ü´¶',
            url: `tg://msg_url?url=${encodeURIComponent(inviteMessage)}`
        };

        return {
            inline_keyboard: [
                [playButton],
                [subscribeButton],
                [howToPlayButton]
            ]
        };
    };

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    async broadcastMessage(message: string, image: string): Promise<void> {
        try {
            const [rows] = await this.db.execute(`SELECT userId, codeToInvite FROM users`);
            const userIds: UserRow[] = rows as UserRow[];

            for (const chatId of userIds) {
                try {
                    const shareMessage = `t.me/WordStreamBot/app?startapp=${chatId.codeToInvite}
` +
                        "\n" +
                        "Generates a phrase and connects air drop üí∏ right now!üî•\n"


                    await this.bot.sendPhoto(chatId.userId, image, {
                        caption: message,
                        parse_mode: 'Markdown',
                        reply_markup: this.getInlineMarkup("ru", shareMessage, chatId.codeToInvite)
                    });
                    console.log(`Message sent to ${chatId.userId}`);
                } catch (error) {
                    console.error(`Error sending to ${chatId.userId}:`, error);
                    continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—à–∏–±–∫—É –∏ –∏–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                }
                await new Promise(resolve => setTimeout(resolve, 100)); // 100 –º—Å –∑–∞–¥–µ—Ä–∂–∫–∞
            }

            console.log('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
        }
    }

}

export default TelegramService;